<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="694" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="677.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="677.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;audio::filter::FilterModule as audio::inner::module::Module&gt;::process (6 samples, 0.13%)</title><rect x="0.2344%" y="613" width="0.1279%" height="15" fill="rgb(227,0,7)"/><text x="0.4844%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.21%)</title><rect x="0.4476%" y="613" width="0.2131%" height="15" fill="rgb(217,0,24)"/><text x="0.6976%" y="623.50"></text></g><g><title>&lt;quicksilver::geom::rectangle::Rectangle as quicksilver::graphics::drawable::Drawable&gt;::draw (24 samples, 0.51%)</title><rect x="0.8312%" y="597" width="0.5115%" height="15" fill="rgb(221,193,54)"/><text x="1.0812%" y="607.50"></text></g><g><title>bus::BusReader&lt;T&gt;::try_recv (10 samples, 0.21%)</title><rect x="1.3640%" y="597" width="0.2131%" height="15" fill="rgb(248,212,6)"/><text x="1.6140%" y="607.50"></text></g><g><title>[audio] (47 samples, 1.00%)</title><rect x="0.6607%" y="613" width="1.0017%" height="15" fill="rgb(208,68,35)"/><text x="0.9107%" y="623.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (6 samples, 0.13%)</title><rect x="1.7477%" y="613" width="0.1279%" height="15" fill="rgb(232,128,0)"/><text x="1.9977%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 0.32%)</title><rect x="1.9821%" y="597" width="0.3197%" height="15" fill="rgb(207,160,47)"/><text x="2.2321%" y="607.50"></text></g><g><title>&lt;audio::filter::FilterModule as audio::inner::module::Module&gt;::process (6 samples, 0.13%)</title><rect x="2.3018%" y="597" width="0.1279%" height="15" fill="rgb(228,23,34)"/><text x="2.5518%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (75 samples, 1.60%)</title><rect x="2.4936%" y="597" width="1.5985%" height="15" fill="rgb(218,30,26)"/><text x="2.7436%" y="607.50"></text></g><g><title>&lt;f32 as quicksilver::geom::scalar::Scalar&gt;::float (31 samples, 0.66%)</title><rect x="4.1347%" y="597" width="0.6607%" height="15" fill="rgb(220,122,19)"/><text x="4.3847%" y="607.50"></text></g><g><title>&lt;i16 as hound::Sample&gt;::read (14 samples, 0.30%)</title><rect x="4.7954%" y="597" width="0.2984%" height="15" fill="rgb(250,228,42)"/><text x="5.0454%" y="607.50"></text></g><g><title>&lt;i16 as quicksilver::geom::scalar::Scalar&gt;::float (7 samples, 0.15%)</title><rect x="5.0938%" y="597" width="0.1492%" height="15" fill="rgb(240,193,28)"/><text x="5.3438%" y="607.50"></text></g><g><title>&lt;i32 as quicksilver::geom::scalar::Scalar&gt;::float (7 samples, 0.15%)</title><rect x="5.2430%" y="597" width="0.1492%" height="15" fill="rgb(216,20,37)"/><text x="5.4930%" y="607.50"></text></g><g><title>&lt;quicksilver::backend::gl3::GL3Backend as quicksilver::backend::Backend&gt;::draw (7 samples, 0.15%)</title><rect x="5.4135%" y="597" width="0.1492%" height="15" fill="rgb(206,188,39)"/><text x="5.6635%" y="607.50"></text></g><g><title>&lt;quicksilver::geom::objects::line::Line as quicksilver::graphics::drawable::Drawable&gt;::draw (41 samples, 0.87%)</title><rect x="5.5627%" y="597" width="0.8738%" height="15" fill="rgb(217,207,13)"/><text x="5.8127%" y="607.50"></text></g><g><title>&lt;quicksilver::geom::rectangle::Rectangle as quicksilver::graphics::drawable::Drawable&gt;::draw (6 samples, 0.13%)</title><rect x="6.4365%" y="597" width="0.1279%" height="15" fill="rgb(231,73,38)"/><text x="6.6865%" y="607.50"></text></g><g><title>&lt;quicksilver::geom::transform::Transform as core::ops::arith::Mul&gt;::mul (7 samples, 0.15%)</title><rect x="6.5644%" y="597" width="0.1492%" height="15" fill="rgb(225,20,46)"/><text x="6.8144%" y="607.50"></text></g><g><title>&lt;quicksilver::geom::vector::Vector as core::ops::arith::Sub&gt;::sub (9 samples, 0.19%)</title><rect x="6.7562%" y="597" width="0.1918%" height="15" fill="rgb(210,31,41)"/><text x="7.0062%" y="607.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (13 samples, 0.28%)</title><rect x="6.9906%" y="597" width="0.2771%" height="15" fill="rgb(221,200,47)"/><text x="7.2406%" y="607.50"></text></g><g><title>[i965_dri.so] (25 samples, 0.53%)</title><rect x="7.2890%" y="597" width="0.5328%" height="15" fill="rgb(226,26,5)"/><text x="7.5390%" y="607.50"></text></g><g><title>__ioctl (5 samples, 0.11%)</title><rect x="8.1202%" y="597" width="0.1066%" height="15" fill="rgb(249,33,26)"/><text x="8.3702%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="8.1202%" y="581" width="0.1066%" height="15" fill="rgb(235,183,28)"/><text x="8.3702%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.38%)</title><rect x="8.3760%" y="597" width="0.3836%" height="15" fill="rgb(221,5,38)"/><text x="8.6260%" y="607.50"></text></g><g><title>audio::inner::graph::Graph::run_graph (13 samples, 0.28%)</title><rect x="8.7809%" y="597" width="0.2771%" height="15" fill="rgb(247,18,42)"/><text x="9.0309%" y="607.50"></text></g><g><title>audio::ui::screens::screen_fx_chain::FxChainScreen::new (6 samples, 0.13%)</title><rect x="9.1006%" y="581" width="0.1279%" height="15" fill="rgb(241,131,45)"/><text x="9.3506%" y="591.50"></text></g><g><title>audio::filter::Filter::new (6 samples, 0.13%)</title><rect x="9.1006%" y="565" width="0.1279%" height="15" fill="rgb(249,31,29)"/><text x="9.3506%" y="575.50"></text></g><g><title>audio::util_drawer::fx_selector_drawer::FxSelectorDrawer::new (6 samples, 0.13%)</title><rect x="9.1006%" y="549" width="0.1279%" height="15" fill="rgb(225,111,53)"/><text x="9.3506%" y="559.50"></text></g><g><title>quicksilver::file::load_file (6 samples, 0.13%)</title><rect x="9.1006%" y="533" width="0.1279%" height="15" fill="rgb(238,160,17)"/><text x="9.3506%" y="543.50"></text></g><g><title>std::io::read_to_end (6 samples, 0.13%)</title><rect x="9.1006%" y="517" width="0.1279%" height="15" fill="rgb(214,148,48)"/><text x="9.3506%" y="527.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (6 samples, 0.13%)</title><rect x="9.1006%" y="501" width="0.1279%" height="15" fill="rgb(232,36,49)"/><text x="9.3506%" y="511.50"></text></g><g><title>std::sys::unix::fs::File::read (6 samples, 0.13%)</title><rect x="9.1006%" y="485" width="0.1279%" height="15" fill="rgb(209,103,24)"/><text x="9.3506%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (6 samples, 0.13%)</title><rect x="9.1006%" y="469" width="0.1279%" height="15" fill="rgb(229,88,8)"/><text x="9.3506%" y="479.50"></text></g><g><title>__libc_read (6 samples, 0.13%)</title><rect x="9.1006%" y="453" width="0.1279%" height="15" fill="rgb(213,181,19)"/><text x="9.3506%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="9.1006%" y="437" width="0.1279%" height="15" fill="rgb(254,191,54)"/><text x="9.3506%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="9.1006%" y="421" width="0.1279%" height="15" fill="rgb(241,83,37)"/><text x="9.3506%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="9.1006%" y="405" width="0.1279%" height="15" fill="rgb(233,36,39)"/><text x="9.3506%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="9.1006%" y="389" width="0.1279%" height="15" fill="rgb(226,3,54)"/><text x="9.3506%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="9.1006%" y="373" width="0.1279%" height="15" fill="rgb(245,192,40)"/><text x="9.3506%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="9.1006%" y="357" width="0.1279%" height="15" fill="rgb(238,167,29)"/><text x="9.3506%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="9.1006%" y="341" width="0.1279%" height="15" fill="rgb(232,182,51)"/><text x="9.3506%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="9.1006%" y="325" width="0.1279%" height="15" fill="rgb(231,60,39)"/><text x="9.3506%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="9.1006%" y="309" width="0.1279%" height="15" fill="rgb(208,69,12)"/><text x="9.3506%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="9.1006%" y="293" width="0.1279%" height="15" fill="rgb(235,93,37)"/><text x="9.3506%" y="303.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (9 samples, 0.19%)</title><rect x="9.2711%" y="501" width="0.1918%" height="15" fill="rgb(213,116,39)"/><text x="9.5211%" y="511.50"></text></g><g><title>std::sys::unix::fs::File::read (9 samples, 0.19%)</title><rect x="9.2711%" y="485" width="0.1918%" height="15" fill="rgb(222,207,29)"/><text x="9.5211%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (9 samples, 0.19%)</title><rect x="9.2711%" y="469" width="0.1918%" height="15" fill="rgb(206,96,30)"/><text x="9.5211%" y="479.50"></text></g><g><title>__libc_read (9 samples, 0.19%)</title><rect x="9.2711%" y="453" width="0.1918%" height="15" fill="rgb(218,138,4)"/><text x="9.5211%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.19%)</title><rect x="9.2711%" y="437" width="0.1918%" height="15" fill="rgb(250,191,14)"/><text x="9.5211%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.17%)</title><rect x="9.2924%" y="421" width="0.1705%" height="15" fill="rgb(239,60,40)"/><text x="9.5424%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="9.3137%" y="405" width="0.1492%" height="15" fill="rgb(206,27,48)"/><text x="9.5637%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="9.3137%" y="389" width="0.1492%" height="15" fill="rgb(225,35,8)"/><text x="9.5637%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="9.3137%" y="373" width="0.1492%" height="15" fill="rgb(250,213,24)"/><text x="9.5637%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="9.3137%" y="357" width="0.1492%" height="15" fill="rgb(247,123,22)"/><text x="9.5637%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="9.3137%" y="341" width="0.1492%" height="15" fill="rgb(231,138,38)"/><text x="9.5637%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="9.3137%" y="325" width="0.1492%" height="15" fill="rgb(231,145,46)"/><text x="9.5637%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="9.3137%" y="309" width="0.1492%" height="15" fill="rgb(251,118,11)"/><text x="9.5637%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="9.3350%" y="293" width="0.1279%" height="15" fill="rgb(217,147,25)"/><text x="9.5850%" y="303.50"></text></g><g><title>audio::ui::Ui::new_with_sender_receiver (26 samples, 0.55%)</title><rect x="9.1006%" y="597" width="0.5541%" height="15" fill="rgb(247,81,37)"/><text x="9.3506%" y="607.50"></text></g><g><title>audio::util_drawer::free_text_drawer::FreeTextDrawer::new (18 samples, 0.38%)</title><rect x="9.2711%" y="581" width="0.3836%" height="15" fill="rgb(209,12,38)"/><text x="9.5211%" y="591.50"></text></g><g><title>audio::util_drawer::free_text_drawer::get_assets_for_color (18 samples, 0.38%)</title><rect x="9.2711%" y="565" width="0.3836%" height="15" fill="rgb(227,1,9)"/><text x="9.5211%" y="575.50"></text></g><g><title>audio::util_drawer::free_text_drawer::get_assets_for_size (18 samples, 0.38%)</title><rect x="9.2711%" y="549" width="0.3836%" height="15" fill="rgb(248,47,43)"/><text x="9.5211%" y="559.50"></text></g><g><title>quicksilver::file::load_file (18 samples, 0.38%)</title><rect x="9.2711%" y="533" width="0.3836%" height="15" fill="rgb(221,10,30)"/><text x="9.5211%" y="543.50"></text></g><g><title>std::io::read_to_end (18 samples, 0.38%)</title><rect x="9.2711%" y="517" width="0.3836%" height="15" fill="rgb(210,229,1)"/><text x="9.5211%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.19%)</title><rect x="9.4629%" y="501" width="0.1918%" height="15" fill="rgb(222,148,37)"/><text x="9.7129%" y="511.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.19%)</title><rect x="9.4629%" y="485" width="0.1918%" height="15" fill="rgb(234,67,33)"/><text x="9.7129%" y="495.50"></text></g><g><title>_int_realloc (9 samples, 0.19%)</title><rect x="9.4629%" y="469" width="0.1918%" height="15" fill="rgb(247,98,35)"/><text x="9.7129%" y="479.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.19%)</title><rect x="9.4629%" y="453" width="0.1918%" height="15" fill="rgb(247,138,52)"/><text x="9.7129%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.19%)</title><rect x="9.4629%" y="437" width="0.1918%" height="15" fill="rgb(213,79,30)"/><text x="9.7129%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="9.5055%" y="421" width="0.1492%" height="15" fill="rgb(246,177,23)"/><text x="9.7555%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="9.5269%" y="405" width="0.1279%" height="15" fill="rgb(230,62,27)"/><text x="9.7769%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="9.5269%" y="389" width="0.1279%" height="15" fill="rgb(216,154,8)"/><text x="9.7769%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="9.5269%" y="373" width="0.1279%" height="15" fill="rgb(244,35,45)"/><text x="9.7769%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="9.5482%" y="357" width="0.1066%" height="15" fill="rgb(251,115,12)"/><text x="9.7982%" y="367.50"></text></g><g><title>audio::ui::screens::screen_main::MainScreen::draw (19 samples, 0.40%)</title><rect x="9.6547%" y="597" width="0.4049%" height="15" fill="rgb(240,54,50)"/><text x="9.9047%" y="607.50"></text></g><g><title>bus::BusReader&lt;T&gt;::try_recv (9 samples, 0.19%)</title><rect x="10.0810%" y="597" width="0.1918%" height="15" fill="rgb(233,84,52)"/><text x="10.3310%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (7 samples, 0.15%)</title><rect x="10.2728%" y="597" width="0.1492%" height="15" fill="rgb(207,117,47)"/><text x="10.5228%" y="607.50"></text></g><g><title>glutin::platform::platform::x11::Context::new::_{{closure}} (6 samples, 0.13%)</title><rect x="10.7843%" y="597" width="0.1279%" height="15" fill="rgb(249,43,39)"/><text x="11.0343%" y="607.50"></text></g><g><title>glutin::platform::platform::x11::Context::new_impl (6 samples, 0.13%)</title><rect x="10.7843%" y="581" width="0.1279%" height="15" fill="rgb(209,38,44)"/><text x="11.0343%" y="591.50"></text></g><g><title>winit::platform::platform::x11::Window::new (5 samples, 0.11%)</title><rect x="10.8056%" y="565" width="0.1066%" height="15" fill="rgb(236,212,23)"/><text x="11.0556%" y="575.50"></text></g><g><title>winit::platform::platform::x11::window::UnownedWindow::new (5 samples, 0.11%)</title><rect x="10.8056%" y="549" width="0.1066%" height="15" fill="rgb(242,79,21)"/><text x="11.0556%" y="559.50"></text></g><g><title>winit::platform::platform::x11::monitor::&lt;impl winit::platform::platform::x11::xdisplay::XConnection&gt;::get_available_monitors (5 samples, 0.11%)</title><rect x="10.8056%" y="533" width="0.1066%" height="15" fill="rgb(211,96,35)"/><text x="11.0556%" y="543.50"></text></g><g><title>[libXrandr.so.2.2.0] (5 samples, 0.11%)</title><rect x="10.8056%" y="517" width="0.1066%" height="15" fill="rgb(253,215,40)"/><text x="11.0556%" y="527.50"></text></g><g><title>_XReply (5 samples, 0.11%)</title><rect x="10.8056%" y="501" width="0.1066%" height="15" fill="rgb(211,81,21)"/><text x="11.0556%" y="511.50"></text></g><g><title>xcb_wait_for_reply64 (5 samples, 0.11%)</title><rect x="10.8056%" y="485" width="0.1066%" height="15" fill="rgb(208,190,38)"/><text x="11.0556%" y="495.50"></text></g><g><title>[libxcb.so.1.1.0] (5 samples, 0.11%)</title><rect x="10.8056%" y="469" width="0.1066%" height="15" fill="rgb(235,213,38)"/><text x="11.0556%" y="479.50"></text></g><g><title>[libxcb.so.1.1.0] (5 samples, 0.11%)</title><rect x="10.8056%" y="453" width="0.1066%" height="15" fill="rgb(237,122,38)"/><text x="11.0556%" y="463.50"></text></g><g><title>__GI___poll (5 samples, 0.11%)</title><rect x="10.8056%" y="437" width="0.1066%" height="15" fill="rgb(244,218,35)"/><text x="11.0556%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="10.8056%" y="421" width="0.1066%" height="15" fill="rgb(240,68,47)"/><text x="11.0556%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="10.8056%" y="405" width="0.1066%" height="15" fill="rgb(210,16,53)"/><text x="11.0556%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="10.8056%" y="389" width="0.1066%" height="15" fill="rgb(235,124,12)"/><text x="11.0556%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="10.8056%" y="373" width="0.1066%" height="15" fill="rgb(224,169,11)"/><text x="11.0556%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="10.8056%" y="357" width="0.1066%" height="15" fill="rgb(250,166,2)"/><text x="11.0556%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="10.8056%" y="341" width="0.1066%" height="15" fill="rgb(242,216,29)"/><text x="11.0556%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="10.8056%" y="325" width="0.1066%" height="15" fill="rgb(230,116,27)"/><text x="11.0556%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="10.8056%" y="309" width="0.1066%" height="15" fill="rgb(228,99,48)"/><text x="11.0556%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="10.8056%" y="293" width="0.1066%" height="15" fill="rgb(253,11,6)"/><text x="11.0556%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="10.8056%" y="277" width="0.1066%" height="15" fill="rgb(247,143,39)"/><text x="11.0556%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="10.8056%" y="261" width="0.1066%" height="15" fill="rgb(236,97,10)"/><text x="11.0556%" y="271.50"></text></g><g><title>quicksilver::geom::rectangle::Rectangle::size (8 samples, 0.17%)</title><rect x="10.9761%" y="597" width="0.1705%" height="15" fill="rgb(233,208,19)"/><text x="11.2261%" y="607.50"></text></g><g><title>quicksilver::graphics::drawable::Background::image (7 samples, 0.15%)</title><rect x="11.1893%" y="597" width="0.1492%" height="15" fill="rgb(216,164,2)"/><text x="11.4393%" y="607.50"></text></g><g><title>&lt;audio::filter::FilterUi as audio::filter::FilterUiTrait&gt;::draw_preview (11 samples, 0.23%)</title><rect x="14.0239%" y="533" width="0.2344%" height="15" fill="rgb(220,129,5)"/><text x="14.2739%" y="543.50"></text></g><g><title>audio::util_drawer::free_text_drawer::FreeTextDrawer::draw (6 samples, 0.13%)</title><rect x="14.1304%" y="517" width="0.1279%" height="15" fill="rgb(242,17,10)"/><text x="14.3804%" y="527.50"></text></g><g><title>&lt;audio::fx::off::OffFxUi as audio::fx::FxUiTrait&gt;::draw_preview (6 samples, 0.13%)</title><rect x="14.2583%" y="533" width="0.1279%" height="15" fill="rgb(242,107,0)"/><text x="14.5083%" y="543.50"></text></g><g><title>audio::util_drawer::free_text_drawer::FreeTextDrawer::draw (5 samples, 0.11%)</title><rect x="14.2796%" y="517" width="0.1066%" height="15" fill="rgb(251,28,31)"/><text x="14.5296%" y="527.50"></text></g><g><title>&lt;i16 as quicksilver::geom::scalar::Scalar&gt;::float (8 samples, 0.17%)</title><rect x="14.3862%" y="533" width="0.1705%" height="15" fill="rgb(233,223,10)"/><text x="14.6362%" y="543.50"></text></g><g><title>&lt;quicksilver::geom::rectangle::Rectangle as quicksilver::geom::shape::Shape&gt;::center (6 samples, 0.13%)</title><rect x="16.6880%" y="517" width="0.1279%" height="15" fill="rgb(215,21,27)"/><text x="16.9380%" y="527.50"></text></g><g><title>&lt;quicksilver::geom::transform::Transform as core::ops::arith::Mul&lt;quicksilver::geom::vector::Vector&gt;&gt;::mul (162 samples, 3.45%)</title><rect x="26.3853%" y="469" width="3.4527%" height="15" fill="rgb(232,23,21)"/><text x="26.6353%" y="479.50">&lt;qu..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (589 samples, 12.55%)</title><rect x="20.1407%" y="501" width="12.5533%" height="15" fill="rgb(244,5,23)"/><text x="20.3907%" y="511.50">&lt;alloc::vec::Vec&lt;T&gt;..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (579 samples, 12.34%)</title><rect x="20.3538%" y="485" width="12.3402%" height="15" fill="rgb(226,81,46)"/><text x="20.6038%" y="495.50">&lt;core::iter::adapt..</text></g><g><title>quicksilver::graphics::drawable::Background::color (132 samples, 2.81%)</title><rect x="29.8806%" y="469" width="2.8133%" height="15" fill="rgb(247,70,30)"/><text x="30.1306%" y="479.50">qu..</text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="32.5661%" y="453" width="0.1279%" height="15" fill="rgb(212,68,19)"/><text x="32.8161%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="32.5874%" y="437" width="0.1066%" height="15" fill="rgb(240,187,13)"/><text x="32.8374%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="32.5874%" y="421" width="0.1066%" height="15" fill="rgb(223,113,26)"/><text x="32.8374%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="32.5874%" y="405" width="0.1066%" height="15" fill="rgb(206,192,2)"/><text x="32.8374%" y="415.50"></text></g><g><title>&lt;i32 as quicksilver::geom::scalar::Scalar&gt;::float (7 samples, 0.15%)</title><rect x="32.6939%" y="501" width="0.1492%" height="15" fill="rgb(241,108,4)"/><text x="32.9439%" y="511.50"></text></g><g><title>&lt;quicksilver::geom::transform::Transform as core::ops::arith::Mul&gt;::mul (216 samples, 4.60%)</title><rect x="32.8431%" y="501" width="4.6036%" height="15" fill="rgb(247,173,49)"/><text x="33.0931%" y="511.50">&lt;quic..</text></g><g><title>quicksilver::geom::rectangle::Rectangle::size (9 samples, 0.19%)</title><rect x="37.5533%" y="501" width="0.1918%" height="15" fill="rgb(224,114,35)"/><text x="37.8033%" y="511.50"></text></g><g><title>&lt;quicksilver::geom::rectangle::Rectangle as quicksilver::graphics::drawable::Drawable&gt;::draw (997 samples, 21.25%)</title><rect x="16.8159%" y="517" width="21.2489%" height="15" fill="rgb(245,159,27)"/><text x="17.0659%" y="527.50">&lt;quicksilver::geom::rectangle::Rec..</text></g><g><title>quicksilver::graphics::drawable::Background::image (14 samples, 0.30%)</title><rect x="37.7664%" y="501" width="0.2984%" height="15" fill="rgb(245,172,44)"/><text x="38.0164%" y="511.50"></text></g><g><title>&lt;quicksilver::geom::transform::Transform as core::ops::arith::Mul&gt;::mul (269 samples, 5.73%)</title><rect x="38.0648%" y="517" width="5.7332%" height="15" fill="rgb(236,23,11)"/><text x="38.3148%" y="527.50">&lt;quicks..</text></g><g><title>&lt;quicksilver::geom::vector::Vector as core::ops::arith::Add&gt;::add (6 samples, 0.13%)</title><rect x="43.7980%" y="517" width="0.1279%" height="15" fill="rgb(205,117,38)"/><text x="44.0480%" y="527.50"></text></g><g><title>[audio] (26 samples, 0.55%)</title><rect x="43.9685%" y="517" width="0.5541%" height="15" fill="rgb(237,72,25)"/><text x="44.2185%" y="527.50"></text></g><g><title>&lt;quicksilver::geom::rectangle::Rectangle as quicksilver::graphics::drawable::Drawable&gt;::draw (26 samples, 0.55%)</title><rect x="43.9685%" y="501" width="0.5541%" height="15" fill="rgb(244,70,9)"/><text x="44.2185%" y="511.50"></text></g><g><title>__sincosf_fma (68 samples, 1.45%)</title><rect x="44.5226%" y="517" width="1.4493%" height="15" fill="rgb(217,125,39)"/><text x="44.7726%" y="527.50"></text></g><g><title>reduced_sincos (51 samples, 1.09%)</title><rect x="44.8849%" y="501" width="1.0870%" height="15" fill="rgb(235,36,10)"/><text x="45.1349%" y="511.50"></text></g><g><title>&lt;quicksilver::geom::objects::line::Line as quicksilver::graphics::drawable::Drawable&gt;::draw (1,522 samples, 32.44%)</title><rect x="14.5567%" y="533" width="32.4382%" height="15" fill="rgb(251,123,47)"/><text x="14.8067%" y="543.50">&lt;quicksilver::geom::objects::line::Line as quicksilv..</text></g><g><title>quicksilver::geom::vector::Vector::angle (48 samples, 1.02%)</title><rect x="45.9719%" y="517" width="1.0230%" height="15" fill="rgb(221,13,13)"/><text x="46.2219%" y="527.50"></text></g><g><title>__atan2f (47 samples, 1.00%)</title><rect x="45.9932%" y="501" width="1.0017%" height="15" fill="rgb(238,131,9)"/><text x="46.2432%" y="511.50"></text></g><g><title>__ieee754_atan2f (17 samples, 0.36%)</title><rect x="46.6326%" y="485" width="0.3623%" height="15" fill="rgb(211,50,8)"/><text x="46.8826%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 0.23%)</title><rect x="47.0801%" y="517" width="0.2344%" height="15" fill="rgb(245,182,24)"/><text x="47.3301%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.23%)</title><rect x="47.0801%" y="501" width="0.2344%" height="15" fill="rgb(242,14,37)"/><text x="47.3301%" y="511.50"></text></g><g><title>&lt;quicksilver::geom::rectangle::Rectangle as quicksilver::graphics::drawable::Drawable&gt;::draw (17 samples, 0.36%)</title><rect x="47.0162%" y="533" width="0.3623%" height="15" fill="rgb(246,228,12)"/><text x="47.2662%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.13%)</title><rect x="47.7408%" y="485" width="0.1279%" height="15" fill="rgb(213,55,15)"/><text x="47.9908%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.13%)</title><rect x="47.7408%" y="469" width="0.1279%" height="15" fill="rgb(209,9,3)"/><text x="47.9908%" y="479.50"></text></g><g><title>audio::util_drawer::free_text_drawer::FreeTextDrawer::draw (16 samples, 0.34%)</title><rect x="47.5916%" y="533" width="0.3410%" height="15" fill="rgb(230,59,30)"/><text x="47.8416%" y="543.50"></text></g><g><title>quicksilver::lifecycle::asset::Asset&lt;T&gt;::execute (10 samples, 0.21%)</title><rect x="47.7195%" y="517" width="0.2131%" height="15" fill="rgb(209,121,21)"/><text x="47.9695%" y="527.50"></text></g><g><title>&lt;quicksilver::geom::rectangle::Rectangle as quicksilver::graphics::drawable::Drawable&gt;::draw (10 samples, 0.21%)</title><rect x="47.7195%" y="501" width="0.2131%" height="15" fill="rgb(220,109,13)"/><text x="47.9695%" y="511.50"></text></g><g><title>[i965_dri.so] (13 samples, 0.28%)</title><rect x="48.1032%" y="453" width="0.2771%" height="15" fill="rgb(232,18,1)"/><text x="48.3532%" y="463.50"></text></g><g><title>[i965_dri.so] (11 samples, 0.23%)</title><rect x="48.1458%" y="437" width="0.2344%" height="15" fill="rgb(215,41,42)"/><text x="48.3958%" y="447.50"></text></g><g><title>[i965_dri.so] (10 samples, 0.21%)</title><rect x="48.1671%" y="421" width="0.2131%" height="15" fill="rgb(224,123,36)"/><text x="48.4171%" y="431.50"></text></g><g><title>[i965_dri.so] (5 samples, 0.11%)</title><rect x="48.2737%" y="405" width="0.1066%" height="15" fill="rgb(240,125,3)"/><text x="48.5237%" y="415.50"></text></g><g><title>&lt;quicksilver::backend::gl3::GL3Backend as quicksilver::backend::Backend&gt;::draw (24 samples, 0.51%)</title><rect x="48.0392%" y="501" width="0.5115%" height="15" fill="rgb(205,98,50)"/><text x="48.2892%" y="511.50"></text></g><g><title>[i965_dri.so] (22 samples, 0.47%)</title><rect x="48.0818%" y="485" width="0.4689%" height="15" fill="rgb(205,185,37)"/><text x="48.3318%" y="495.50"></text></g><g><title>[i965_dri.so] (21 samples, 0.45%)</title><rect x="48.1032%" y="469" width="0.4476%" height="15" fill="rgb(238,207,15)"/><text x="48.3532%" y="479.50"></text></g><g><title>drmIoctl (8 samples, 0.17%)</title><rect x="48.3802%" y="453" width="0.1705%" height="15" fill="rgb(213,199,42)"/><text x="48.6302%" y="463.50"></text></g><g><title>__ioctl (8 samples, 0.17%)</title><rect x="48.3802%" y="437" width="0.1705%" height="15" fill="rgb(235,201,11)"/><text x="48.6302%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.17%)</title><rect x="48.3802%" y="421" width="0.1705%" height="15" fill="rgb(207,46,11)"/><text x="48.6302%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.17%)</title><rect x="48.3802%" y="405" width="0.1705%" height="15" fill="rgb(241,35,35)"/><text x="48.6302%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="48.4228%" y="389" width="0.1279%" height="15" fill="rgb(243,32,47)"/><text x="48.6728%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="48.4228%" y="373" width="0.1279%" height="15" fill="rgb(247,202,23)"/><text x="48.6728%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="48.4228%" y="357" width="0.1279%" height="15" fill="rgb(219,102,11)"/><text x="48.6728%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="48.4442%" y="341" width="0.1066%" height="15" fill="rgb(243,110,44)"/><text x="48.6942%" y="351.50"></text></g><g><title>[i965_dri.so] (6 samples, 0.13%)</title><rect x="48.9344%" y="389" width="0.1279%" height="15" fill="rgb(222,74,54)"/><text x="49.1844%" y="399.50"></text></g><g><title>[i965_dri.so] (8 samples, 0.17%)</title><rect x="48.9130%" y="405" width="0.1705%" height="15" fill="rgb(216,99,12)"/><text x="49.1630%" y="415.50"></text></g><g><title>[i965_dri.so] (14 samples, 0.30%)</title><rect x="48.8278%" y="421" width="0.2984%" height="15" fill="rgb(226,22,26)"/><text x="49.0778%" y="431.50"></text></g><g><title>[i965_dri.so] (18 samples, 0.38%)</title><rect x="48.7639%" y="453" width="0.3836%" height="15" fill="rgb(217,163,10)"/><text x="49.0139%" y="463.50"></text></g><g><title>[i965_dri.so] (18 samples, 0.38%)</title><rect x="48.7639%" y="437" width="0.3836%" height="15" fill="rgb(213,25,53)"/><text x="49.0139%" y="447.50"></text></g><g><title>glPrimitiveBoundingBox (18 samples, 0.38%)</title><rect x="49.1475%" y="405" width="0.3836%" height="15" fill="rgb(252,105,26)"/><text x="49.3975%" y="415.50"></text></g><g><title>xcb_wait_for_special_event (15 samples, 0.32%)</title><rect x="49.2114%" y="389" width="0.3197%" height="15" fill="rgb(220,39,43)"/><text x="49.4614%" y="399.50"></text></g><g><title>[libxcb.so.1.1.0] (15 samples, 0.32%)</title><rect x="49.2114%" y="373" width="0.3197%" height="15" fill="rgb(229,68,48)"/><text x="49.4614%" y="383.50"></text></g><g><title>__GI___poll (11 samples, 0.23%)</title><rect x="49.2967%" y="357" width="0.2344%" height="15" fill="rgb(252,8,32)"/><text x="49.5467%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.21%)</title><rect x="49.3180%" y="341" width="0.2131%" height="15" fill="rgb(223,20,43)"/><text x="49.5680%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.17%)</title><rect x="49.3606%" y="325" width="0.1705%" height="15" fill="rgb(229,81,49)"/><text x="49.6106%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="49.3819%" y="309" width="0.1492%" height="15" fill="rgb(236,28,36)"/><text x="49.6319%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="49.3819%" y="293" width="0.1492%" height="15" fill="rgb(249,185,26)"/><text x="49.6319%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="49.4032%" y="277" width="0.1279%" height="15" fill="rgb(249,174,33)"/><text x="49.6532%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="49.4032%" y="261" width="0.1279%" height="15" fill="rgb(233,201,37)"/><text x="49.6532%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="49.4032%" y="245" width="0.1279%" height="15" fill="rgb(221,78,26)"/><text x="49.6532%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="49.4032%" y="229" width="0.1279%" height="15" fill="rgb(250,127,30)"/><text x="49.6532%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="49.4032%" y="213" width="0.1279%" height="15" fill="rgb(230,49,44)"/><text x="49.6532%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="49.4032%" y="197" width="0.1279%" height="15" fill="rgb(229,67,23)"/><text x="49.6532%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="49.4032%" y="181" width="0.1279%" height="15" fill="rgb(249,83,47)"/><text x="49.6532%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="49.4246%" y="165" width="0.1066%" height="15" fill="rgb(215,43,3)"/><text x="49.6746%" y="175.50"></text></g><g><title>&lt;audio::ui::Ui as quicksilver::lifecycle::state::State&gt;::draw (1,796 samples, 38.28%)</title><rect x="11.3384%" y="565" width="38.2779%" height="15" fill="rgb(238,154,13)"/><text x="11.5884%" y="575.50">&lt;audio::ui::Ui as quicksilver::lifecycle::state::State&gt;::draw</text></g><g><title>audio::ui::screens::screen_main::MainScreen::draw (1,796 samples, 38.28%)</title><rect x="11.3384%" y="549" width="38.2779%" height="15" fill="rgb(219,56,2)"/><text x="11.5884%" y="559.50">audio::ui::screens::screen_main::MainScreen::draw</text></g><g><title>quicksilver::lifecycle::window::Window::clear (77 samples, 1.64%)</title><rect x="47.9753%" y="533" width="1.6411%" height="15" fill="rgb(233,0,4)"/><text x="48.2253%" y="543.50"></text></g><g><title>quicksilver::backend::Backend::clear_color (75 samples, 1.60%)</title><rect x="48.0179%" y="517" width="1.5985%" height="15" fill="rgb(235,30,7)"/><text x="48.2679%" y="527.50"></text></g><g><title>[i965_dri.so] (50 samples, 1.07%)</title><rect x="48.5507%" y="501" width="1.0656%" height="15" fill="rgb(250,79,13)"/><text x="48.8007%" y="511.50"></text></g><g><title>[i965_dri.so] (48 samples, 1.02%)</title><rect x="48.5934%" y="485" width="1.0230%" height="15" fill="rgb(211,146,34)"/><text x="48.8434%" y="495.50"></text></g><g><title>[i965_dri.so] (44 samples, 0.94%)</title><rect x="48.6786%" y="469" width="0.9378%" height="15" fill="rgb(228,22,38)"/><text x="48.9286%" y="479.50"></text></g><g><title>glPrimitiveBoundingBox (22 samples, 0.47%)</title><rect x="49.1475%" y="453" width="0.4689%" height="15" fill="rgb(235,168,5)"/><text x="49.3975%" y="463.50"></text></g><g><title>glPrimitiveBoundingBox (22 samples, 0.47%)</title><rect x="49.1475%" y="437" width="0.4689%" height="15" fill="rgb(221,155,16)"/><text x="49.3975%" y="447.50"></text></g><g><title>glPrimitiveBoundingBox (22 samples, 0.47%)</title><rect x="49.1475%" y="421" width="0.4689%" height="15" fill="rgb(215,215,53)"/><text x="49.3975%" y="431.50"></text></g><g><title>[i965_dri.so] (5 samples, 0.11%)</title><rect x="49.7869%" y="453" width="0.1066%" height="15" fill="rgb(223,4,10)"/><text x="50.0369%" y="463.50"></text></g><g><title>[i965_dri.so] (5 samples, 0.11%)</title><rect x="49.7869%" y="437" width="0.1066%" height="15" fill="rgb(234,103,6)"/><text x="50.0369%" y="447.50"></text></g><g><title>[i965_dri.so] (6 samples, 0.13%)</title><rect x="49.7869%" y="469" width="0.1279%" height="15" fill="rgb(227,97,0)"/><text x="50.0369%" y="479.50"></text></g><g><title>[i965_dri.so] (11 samples, 0.23%)</title><rect x="49.7869%" y="485" width="0.2344%" height="15" fill="rgb(234,150,53)"/><text x="50.0369%" y="495.50"></text></g><g><title>[i965_dri.so] (15 samples, 0.32%)</title><rect x="49.7442%" y="501" width="0.3197%" height="15" fill="rgb(228,201,54)"/><text x="49.9942%" y="511.50"></text></g><g><title>[i965_dri.so] (33 samples, 0.70%)</title><rect x="49.7442%" y="517" width="0.7033%" height="15" fill="rgb(222,22,37)"/><text x="49.9942%" y="527.50"></text></g><g><title>drmIoctl (18 samples, 0.38%)</title><rect x="50.0639%" y="501" width="0.3836%" height="15" fill="rgb(237,53,32)"/><text x="50.3139%" y="511.50"></text></g><g><title>__ioctl (18 samples, 0.38%)</title><rect x="50.0639%" y="485" width="0.3836%" height="15" fill="rgb(233,25,53)"/><text x="50.3139%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (18 samples, 0.38%)</title><rect x="50.0639%" y="469" width="0.3836%" height="15" fill="rgb(210,40,34)"/><text x="50.3139%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (17 samples, 0.36%)</title><rect x="50.0853%" y="453" width="0.3623%" height="15" fill="rgb(241,220,44)"/><text x="50.3353%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (17 samples, 0.36%)</title><rect x="50.0853%" y="437" width="0.3623%" height="15" fill="rgb(235,28,35)"/><text x="50.3353%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (17 samples, 0.36%)</title><rect x="50.0853%" y="421" width="0.3623%" height="15" fill="rgb(210,56,17)"/><text x="50.3353%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (17 samples, 0.36%)</title><rect x="50.0853%" y="405" width="0.3623%" height="15" fill="rgb(224,130,29)"/><text x="50.3353%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.34%)</title><rect x="50.1066%" y="389" width="0.3410%" height="15" fill="rgb(235,212,8)"/><text x="50.3566%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.34%)</title><rect x="50.1066%" y="373" width="0.3410%" height="15" fill="rgb(223,33,50)"/><text x="50.3566%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.34%)</title><rect x="50.1066%" y="357" width="0.3410%" height="15" fill="rgb(219,149,13)"/><text x="50.3566%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.32%)</title><rect x="50.1279%" y="341" width="0.3197%" height="15" fill="rgb(250,156,29)"/><text x="50.3779%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.23%)</title><rect x="50.2131%" y="325" width="0.2344%" height="15" fill="rgb(216,193,19)"/><text x="50.4631%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.19%)</title><rect x="50.2558%" y="309" width="0.1918%" height="15" fill="rgb(216,135,14)"/><text x="50.5058%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="50.2984%" y="293" width="0.1492%" height="15" fill="rgb(241,47,5)"/><text x="50.5484%" y="303.50"></text></g><g><title>glPrimitiveBoundingBox (6 samples, 0.13%)</title><rect x="50.4689%" y="517" width="0.1279%" height="15" fill="rgb(233,42,35)"/><text x="50.7189%" y="527.50"></text></g><g><title>__GI___writev (7 samples, 0.15%)</title><rect x="50.6607%" y="453" width="0.1492%" height="15" fill="rgb(231,13,6)"/><text x="50.9107%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="50.6607%" y="437" width="0.1492%" height="15" fill="rgb(207,181,40)"/><text x="50.9107%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="50.6607%" y="421" width="0.1492%" height="15" fill="rgb(254,173,49)"/><text x="50.9107%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="50.6607%" y="405" width="0.1492%" height="15" fill="rgb(221,1,38)"/><text x="50.9107%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="50.6607%" y="389" width="0.1492%" height="15" fill="rgb(206,124,46)"/><text x="50.9107%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="50.6820%" y="373" width="0.1279%" height="15" fill="rgb(249,21,11)"/><text x="50.9320%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="50.6820%" y="357" width="0.1279%" height="15" fill="rgb(222,201,40)"/><text x="50.9320%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="50.6820%" y="341" width="0.1279%" height="15" fill="rgb(235,61,29)"/><text x="50.9320%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="50.6820%" y="325" width="0.1279%" height="15" fill="rgb(219,207,3)"/><text x="50.9320%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="50.6820%" y="309" width="0.1279%" height="15" fill="rgb(222,56,46)"/><text x="50.9320%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="50.6820%" y="293" width="0.1279%" height="15" fill="rgb(239,76,54)"/><text x="50.9320%" y="303.50"></text></g><g><title>xcb_flush (11 samples, 0.23%)</title><rect x="50.5968%" y="517" width="0.2344%" height="15" fill="rgb(231,124,27)"/><text x="50.8468%" y="527.50"></text></g><g><title>[libxcb.so.1.1.0] (11 samples, 0.23%)</title><rect x="50.5968%" y="501" width="0.2344%" height="15" fill="rgb(249,195,6)"/><text x="50.8468%" y="511.50"></text></g><g><title>[libxcb.so.1.1.0] (11 samples, 0.23%)</title><rect x="50.5968%" y="485" width="0.2344%" height="15" fill="rgb(237,174,47)"/><text x="50.8468%" y="495.50"></text></g><g><title>[libxcb.so.1.1.0] (11 samples, 0.23%)</title><rect x="50.5968%" y="469" width="0.2344%" height="15" fill="rgb(206,201,31)"/><text x="50.8468%" y="479.50"></text></g><g><title>glPrimitiveBoundingBox (54 samples, 1.15%)</title><rect x="49.7229%" y="533" width="1.1509%" height="15" fill="rgb(231,57,52)"/><text x="49.9729%" y="543.50"></text></g><g><title>&lt;quicksilver::backend::gl3::GL3Backend as quicksilver::backend::Backend&gt;::present (60 samples, 1.28%)</title><rect x="49.6164%" y="565" width="1.2788%" height="15" fill="rgb(248,177,22)"/><text x="49.8664%" y="575.50"></text></g><g><title>glutin::windowed::ContextWrapper&lt;glutin::context::PossiblyCurrent,W&gt;::swap_buffers (60 samples, 1.28%)</title><rect x="49.6164%" y="549" width="1.2788%" height="15" fill="rgb(215,211,37)"/><text x="49.8664%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="62.3188%" y="533" width="0.1279%" height="15" fill="rgb(241,128,51)"/><text x="62.5688%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="62.3188%" y="517" width="0.1279%" height="15" fill="rgb(227,165,31)"/><text x="62.5688%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="62.3188%" y="501" width="0.1279%" height="15" fill="rgb(228,167,24)"/><text x="62.5688%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="62.3402%" y="485" width="0.1066%" height="15" fill="rgb(228,143,12)"/><text x="62.5902%" y="495.50"></text></g><g><title>[i965_dri.so] (28 samples, 0.60%)</title><rect x="65.4092%" y="405" width="0.5968%" height="15" fill="rgb(249,149,8)"/><text x="65.6592%" y="415.50"></text></g><g><title>[i965_dri.so] (16 samples, 0.34%)</title><rect x="65.6650%" y="389" width="0.3410%" height="15" fill="rgb(243,35,44)"/><text x="65.9150%" y="399.50"></text></g><g><title>drmIoctl (10 samples, 0.21%)</title><rect x="65.7928%" y="373" width="0.2131%" height="15" fill="rgb(246,89,9)"/><text x="66.0428%" y="383.50"></text></g><g><title>__ioctl (10 samples, 0.21%)</title><rect x="65.7928%" y="357" width="0.2131%" height="15" fill="rgb(233,213,13)"/><text x="66.0428%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.21%)</title><rect x="65.7928%" y="341" width="0.2131%" height="15" fill="rgb(233,141,41)"/><text x="66.0428%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.19%)</title><rect x="65.8142%" y="325" width="0.1918%" height="15" fill="rgb(239,167,4)"/><text x="66.0642%" y="335.50"></text></g><g><title>drmIoctl (23 samples, 0.49%)</title><rect x="66.0273%" y="405" width="0.4902%" height="15" fill="rgb(209,217,16)"/><text x="66.2773%" y="415.50"></text></g><g><title>__ioctl (23 samples, 0.49%)</title><rect x="66.0273%" y="389" width="0.4902%" height="15" fill="rgb(219,88,35)"/><text x="66.2773%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (23 samples, 0.49%)</title><rect x="66.0273%" y="373" width="0.4902%" height="15" fill="rgb(220,193,23)"/><text x="66.2773%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (23 samples, 0.49%)</title><rect x="66.0273%" y="357" width="0.4902%" height="15" fill="rgb(230,90,52)"/><text x="66.2773%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.47%)</title><rect x="66.0486%" y="341" width="0.4689%" height="15" fill="rgb(252,106,19)"/><text x="66.2986%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.47%)</title><rect x="66.0486%" y="325" width="0.4689%" height="15" fill="rgb(206,74,20)"/><text x="66.2986%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.47%)</title><rect x="66.0486%" y="309" width="0.4689%" height="15" fill="rgb(230,138,44)"/><text x="66.2986%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.47%)</title><rect x="66.0486%" y="293" width="0.4689%" height="15" fill="rgb(235,182,43)"/><text x="66.2986%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.47%)</title><rect x="66.0486%" y="277" width="0.4689%" height="15" fill="rgb(242,16,51)"/><text x="66.2986%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.47%)</title><rect x="66.0486%" y="261" width="0.4689%" height="15" fill="rgb(248,9,4)"/><text x="66.2986%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (19 samples, 0.40%)</title><rect x="66.1125%" y="245" width="0.4049%" height="15" fill="rgb(210,31,22)"/><text x="66.3625%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.21%)</title><rect x="66.3043%" y="229" width="0.2131%" height="15" fill="rgb(239,54,39)"/><text x="66.5543%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.21%)</title><rect x="66.3043%" y="213" width="0.2131%" height="15" fill="rgb(230,99,41)"/><text x="66.5543%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.17%)</title><rect x="66.3470%" y="197" width="0.1705%" height="15" fill="rgb(253,106,12)"/><text x="66.5970%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="66.4109%" y="181" width="0.1066%" height="15" fill="rgb(213,46,41)"/><text x="66.6609%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="66.4109%" y="165" width="0.1066%" height="15" fill="rgb(215,133,35)"/><text x="66.6609%" y="175.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="66.4109%" y="149" width="0.1066%" height="15" fill="rgb(213,28,5)"/><text x="66.6609%" y="159.50"></text></g><g><title>[i965_dri.so] (67 samples, 1.43%)</title><rect x="65.1108%" y="421" width="1.4280%" height="15" fill="rgb(215,77,49)"/><text x="65.3608%" y="431.50"></text></g><g><title>[i965_dri.so] (88 samples, 1.88%)</title><rect x="64.6846%" y="437" width="1.8755%" height="15" fill="rgb(248,100,22)"/><text x="64.9346%" y="447.50">[..</text></g><g><title>[i965_dri.so] (125 samples, 2.66%)</title><rect x="64.0026%" y="453" width="2.6641%" height="15" fill="rgb(208,67,9)"/><text x="64.2526%" y="463.50">[i..</text></g><g><title>[i965_dri.so] (159 samples, 3.39%)</title><rect x="63.3205%" y="469" width="3.3887%" height="15" fill="rgb(219,133,21)"/><text x="63.5705%" y="479.50">[i9..</text></g><g><title>[i965_dri.so] (212 samples, 4.52%)</title><rect x="62.9582%" y="485" width="4.5183%" height="15" fill="rgb(246,46,29)"/><text x="63.2082%" y="495.50">[i965..</text></g><g><title>drmIoctl (36 samples, 0.77%)</title><rect x="66.7093%" y="469" width="0.7673%" height="15" fill="rgb(246,185,52)"/><text x="66.9593%" y="479.50"></text></g><g><title>__ioctl (36 samples, 0.77%)</title><rect x="66.7093%" y="453" width="0.7673%" height="15" fill="rgb(252,136,11)"/><text x="66.9593%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (36 samples, 0.77%)</title><rect x="66.7093%" y="437" width="0.7673%" height="15" fill="rgb(219,138,53)"/><text x="66.9593%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (34 samples, 0.72%)</title><rect x="66.7519%" y="421" width="0.7246%" height="15" fill="rgb(211,51,23)"/><text x="67.0019%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (32 samples, 0.68%)</title><rect x="66.7945%" y="405" width="0.6820%" height="15" fill="rgb(247,221,28)"/><text x="67.0445%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (32 samples, 0.68%)</title><rect x="66.7945%" y="389" width="0.6820%" height="15" fill="rgb(251,222,45)"/><text x="67.0445%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (31 samples, 0.66%)</title><rect x="66.8159%" y="373" width="0.6607%" height="15" fill="rgb(217,162,53)"/><text x="67.0659%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (31 samples, 0.66%)</title><rect x="66.8159%" y="357" width="0.6607%" height="15" fill="rgb(229,93,14)"/><text x="67.0659%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (29 samples, 0.62%)</title><rect x="66.8585%" y="341" width="0.6181%" height="15" fill="rgb(209,67,49)"/><text x="67.1085%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.51%)</title><rect x="66.9650%" y="325" width="0.5115%" height="15" fill="rgb(213,87,29)"/><text x="67.2150%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.47%)</title><rect x="67.0077%" y="309" width="0.4689%" height="15" fill="rgb(205,151,52)"/><text x="67.2577%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (19 samples, 0.40%)</title><rect x="67.0716%" y="293" width="0.4049%" height="15" fill="rgb(253,215,39)"/><text x="67.3216%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (17 samples, 0.36%)</title><rect x="67.1142%" y="277" width="0.3623%" height="15" fill="rgb(221,220,41)"/><text x="67.3642%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.32%)</title><rect x="67.1569%" y="261" width="0.3197%" height="15" fill="rgb(218,133,21)"/><text x="67.4069%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.30%)</title><rect x="67.1782%" y="245" width="0.2984%" height="15" fill="rgb(221,193,43)"/><text x="67.4282%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.28%)</title><rect x="67.1995%" y="229" width="0.2771%" height="15" fill="rgb(240,128,52)"/><text x="67.4495%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.26%)</title><rect x="67.2208%" y="213" width="0.2558%" height="15" fill="rgb(253,114,12)"/><text x="67.4708%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.23%)</title><rect x="67.2421%" y="197" width="0.2344%" height="15" fill="rgb(215,223,47)"/><text x="67.4921%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.23%)</title><rect x="67.2421%" y="181" width="0.2344%" height="15" fill="rgb(248,225,23)"/><text x="67.4921%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.19%)</title><rect x="67.2847%" y="165" width="0.1918%" height="15" fill="rgb(250,108,0)"/><text x="67.5347%" y="175.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.19%)</title><rect x="67.2847%" y="149" width="0.1918%" height="15" fill="rgb(228,208,7)"/><text x="67.5347%" y="159.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.19%)</title><rect x="67.2847%" y="133" width="0.1918%" height="15" fill="rgb(244,45,10)"/><text x="67.5347%" y="143.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="67.3487%" y="117" width="0.1279%" height="15" fill="rgb(207,125,25)"/><text x="67.5987%" y="127.50"></text></g><g><title>[i965_dri.so] (222 samples, 4.73%)</title><rect x="62.8730%" y="501" width="4.7315%" height="15" fill="rgb(210,195,18)"/><text x="63.1230%" y="511.50">[i965_..</text></g><g><title>drmIoctl (6 samples, 0.13%)</title><rect x="67.4766%" y="485" width="0.1279%" height="15" fill="rgb(249,80,12)"/><text x="67.7266%" y="495.50"></text></g><g><title>__ioctl (6 samples, 0.13%)</title><rect x="67.4766%" y="469" width="0.1279%" height="15" fill="rgb(221,65,9)"/><text x="67.7266%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="67.4766%" y="453" width="0.1279%" height="15" fill="rgb(235,49,36)"/><text x="67.7266%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="67.4979%" y="437" width="0.1066%" height="15" fill="rgb(225,32,20)"/><text x="67.7479%" y="447.50"></text></g><g><title>[i965_dri.so] (429 samples, 9.14%)</title><rect x="62.4467%" y="533" width="9.1432%" height="15" fill="rgb(215,141,46)"/><text x="62.6967%" y="543.50">[i965_dri.so]</text></g><g><title>[i965_dri.so] (419 samples, 8.93%)</title><rect x="62.6598%" y="517" width="8.9301%" height="15" fill="rgb(250,160,47)"/><text x="62.9098%" y="527.50">[i965_dri.so]</text></g><g><title>drmIoctl (187 samples, 3.99%)</title><rect x="67.6044%" y="501" width="3.9855%" height="15" fill="rgb(216,222,40)"/><text x="67.8544%" y="511.50">drmI..</text></g><g><title>__ioctl (187 samples, 3.99%)</title><rect x="67.6044%" y="485" width="3.9855%" height="15" fill="rgb(234,217,39)"/><text x="67.8544%" y="495.50">__io..</text></g><g><title>[[kernel.kallsyms]] (187 samples, 3.99%)</title><rect x="67.6044%" y="469" width="3.9855%" height="15" fill="rgb(207,178,40)"/><text x="67.8544%" y="479.50">[[ke..</text></g><g><title>[[kernel.kallsyms]] (181 samples, 3.86%)</title><rect x="67.7323%" y="453" width="3.8576%" height="15" fill="rgb(221,136,13)"/><text x="67.9823%" y="463.50">[[ke..</text></g><g><title>[[kernel.kallsyms]] (173 samples, 3.69%)</title><rect x="67.9028%" y="437" width="3.6871%" height="15" fill="rgb(249,199,10)"/><text x="68.1528%" y="447.50">[[ke..</text></g><g><title>[[kernel.kallsyms]] (173 samples, 3.69%)</title><rect x="67.9028%" y="421" width="3.6871%" height="15" fill="rgb(249,222,13)"/><text x="68.1528%" y="431.50">[[ke..</text></g><g><title>[[kernel.kallsyms]] (171 samples, 3.64%)</title><rect x="67.9454%" y="405" width="3.6445%" height="15" fill="rgb(244,185,38)"/><text x="68.1954%" y="415.50">[[ke..</text></g><g><title>[[kernel.kallsyms]] (159 samples, 3.39%)</title><rect x="68.2012%" y="389" width="3.3887%" height="15" fill="rgb(236,202,9)"/><text x="68.4512%" y="399.50">[[k..</text></g><g><title>[[kernel.kallsyms]] (156 samples, 3.32%)</title><rect x="68.2651%" y="373" width="3.3248%" height="15" fill="rgb(250,229,37)"/><text x="68.5151%" y="383.50">[[k..</text></g><g><title>[[kernel.kallsyms]] (150 samples, 3.20%)</title><rect x="68.3930%" y="357" width="3.1969%" height="15" fill="rgb(206,174,23)"/><text x="68.6430%" y="367.50">[[k..</text></g><g><title>[[kernel.kallsyms]] (28 samples, 0.60%)</title><rect x="70.9932%" y="341" width="0.5968%" height="15" fill="rgb(211,33,43)"/><text x="71.2432%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.30%)</title><rect x="71.2916%" y="325" width="0.2984%" height="15" fill="rgb(245,58,50)"/><text x="71.5416%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="71.4834%" y="309" width="0.1066%" height="15" fill="rgb(244,68,36)"/><text x="71.7334%" y="319.50"></text></g><g><title>__memmove_avx_unaligned_erms (27 samples, 0.58%)</title><rect x="71.5899%" y="533" width="0.5754%" height="15" fill="rgb(232,229,15)"/><text x="71.8399%" y="543.50"></text></g><g><title>&lt;quicksilver::backend::gl3::GL3Backend as quicksilver::backend::Backend&gt;::draw (934 samples, 19.91%)</title><rect x="52.6002%" y="549" width="19.9062%" height="15" fill="rgb(254,30,23)"/><text x="52.8502%" y="559.50">&lt;quicksilver::backend::gl3::GL3..</text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (12 samples, 0.26%)</title><rect x="72.2506%" y="533" width="0.2558%" height="15" fill="rgb(235,160,14)"/><text x="72.5006%" y="543.50"></text></g><g><title>alloc::slice::merge_sort (98 samples, 2.09%)</title><rect x="72.5064%" y="549" width="2.0887%" height="15" fill="rgb(212,155,44)"/><text x="72.7564%" y="559.50">a..</text></g><g><title>quicksilver::lifecycle::window::Window::flush (1,147 samples, 24.45%)</title><rect x="50.8951%" y="565" width="24.4459%" height="15" fill="rgb(226,2,50)"/><text x="51.1451%" y="575.50">quicksilver::lifecycle::window::Window:..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (35 samples, 0.75%)</title><rect x="74.5951%" y="549" width="0.7460%" height="15" fill="rgb(234,177,6)"/><text x="74.8451%" y="559.50"></text></g><g><title>quicksilver::lifecycle::application::Application&lt;T&gt;::draw (3,004 samples, 64.02%)</title><rect x="11.3384%" y="581" width="64.0239%" height="15" fill="rgb(217,24,9)"/><text x="11.5884%" y="591.50">quicksilver::lifecycle::application::Application&lt;T&gt;::draw</text></g><g><title>&lt;crossbeam_channel::channel::TryIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.32%)</title><rect x="75.4902%" y="517" width="0.3197%" height="15" fill="rgb(220,13,46)"/><text x="75.7402%" y="527.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (10 samples, 0.21%)</title><rect x="75.5968%" y="501" width="0.2131%" height="15" fill="rgb(239,221,27)"/><text x="75.8468%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (27 samples, 0.58%)</title><rect x="75.3623%" y="533" width="0.5754%" height="15" fill="rgb(222,198,25)"/><text x="75.6123%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.11%)</title><rect x="75.8312%" y="517" width="0.1066%" height="15" fill="rgb(211,99,13)"/><text x="76.0812%" y="527.50"></text></g><g><title>audio::ui::screens::screen_main::MainScreen::update (30 samples, 0.64%)</title><rect x="75.3623%" y="549" width="0.6394%" height="15" fill="rgb(232,111,31)"/><text x="75.6123%" y="559.50"></text></g><g><title>quicksilver::lifecycle::application::Application&lt;T&gt;::update (31 samples, 0.66%)</title><rect x="75.3623%" y="581" width="0.6607%" height="15" fill="rgb(245,82,37)"/><text x="75.6123%" y="591.50"></text></g><g><title>&lt;audio::ui::Ui as quicksilver::lifecycle::state::State&gt;::update (31 samples, 0.66%)</title><rect x="75.3623%" y="565" width="0.6607%" height="15" fill="rgb(227,149,46)"/><text x="75.6123%" y="575.50"></text></g><g><title>quicksilver::lifecycle::run::run_with (3,037 samples, 64.73%)</title><rect x="11.3384%" y="597" width="64.7272%" height="15" fill="rgb(218,36,50)"/><text x="11.5884%" y="607.50">quicksilver::lifecycle::run::run_with</text></g><g><title>[unknown] (3,486 samples, 74.30%)</title><rect x="1.9821%" y="613" width="74.2967%" height="15" fill="rgb(226,80,48)"/><text x="2.2321%" y="623.50">[unknown]</text></g><g><title>[[kernel.kallsyms]] (54 samples, 1.15%)</title><rect x="76.2788%" y="597" width="1.1509%" height="15" fill="rgb(238,224,15)"/><text x="76.5288%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (54 samples, 1.15%)</title><rect x="76.2788%" y="581" width="1.1509%" height="15" fill="rgb(241,136,10)"/><text x="76.5288%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (54 samples, 1.15%)</title><rect x="76.2788%" y="565" width="1.1509%" height="15" fill="rgb(208,32,45)"/><text x="76.5288%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (54 samples, 1.15%)</title><rect x="76.2788%" y="549" width="1.1509%" height="15" fill="rgb(207,135,9)"/><text x="76.5288%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (50 samples, 1.07%)</title><rect x="76.3640%" y="533" width="1.0656%" height="15" fill="rgb(206,86,44)"/><text x="76.6140%" y="543.50"></text></g><g><title>[libjack.so.0.1.0] (23 samples, 0.49%)</title><rect x="77.4510%" y="533" width="0.4902%" height="15" fill="rgb(245,177,15)"/><text x="77.7010%" y="543.50"></text></g><g><title>[libjack.so.0.1.0] (21 samples, 0.45%)</title><rect x="77.4936%" y="517" width="0.4476%" height="15" fill="rgb(206,64,50)"/><text x="77.7436%" y="527.50"></text></g><g><title>syscall (17 samples, 0.36%)</title><rect x="77.5789%" y="501" width="0.3623%" height="15" fill="rgb(234,36,40)"/><text x="77.8289%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.34%)</title><rect x="77.6002%" y="485" width="0.3410%" height="15" fill="rgb(213,64,8)"/><text x="77.8502%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.32%)</title><rect x="77.6215%" y="469" width="0.3197%" height="15" fill="rgb(210,75,36)"/><text x="77.8715%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.30%)</title><rect x="77.6428%" y="453" width="0.2984%" height="15" fill="rgb(229,88,21)"/><text x="77.8928%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.30%)</title><rect x="77.6428%" y="437" width="0.2984%" height="15" fill="rgb(252,204,47)"/><text x="77.8928%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.30%)</title><rect x="77.6428%" y="421" width="0.2984%" height="15" fill="rgb(208,77,27)"/><text x="77.8928%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.30%)</title><rect x="77.6428%" y="405" width="0.2984%" height="15" fill="rgb(221,76,26)"/><text x="77.8928%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.30%)</title><rect x="77.6428%" y="389" width="0.2984%" height="15" fill="rgb(225,139,18)"/><text x="77.8928%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.28%)</title><rect x="77.6641%" y="373" width="0.2771%" height="15" fill="rgb(230,137,11)"/><text x="77.9141%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.23%)</title><rect x="77.7067%" y="357" width="0.2344%" height="15" fill="rgb(212,28,1)"/><text x="77.9567%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="77.7920%" y="341" width="0.1492%" height="15" fill="rgb(248,164,17)"/><text x="78.0420%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="77.7920%" y="325" width="0.1492%" height="15" fill="rgb(222,171,42)"/><text x="78.0420%" y="335.50"></text></g><g><title>__libc_read (5 samples, 0.11%)</title><rect x="77.9412%" y="533" width="0.1066%" height="15" fill="rgb(243,84,45)"/><text x="78.1912%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="77.9412%" y="517" width="0.1066%" height="15" fill="rgb(252,49,23)"/><text x="78.1912%" y="527.50"></text></g><g><title>__GI___libc_realloc (18 samples, 0.38%)</title><rect x="78.4527%" y="485" width="0.3836%" height="15" fill="rgb(215,19,7)"/><text x="78.7027%" y="495.50"></text></g><g><title>_int_realloc (12 samples, 0.26%)</title><rect x="78.5806%" y="469" width="0.2558%" height="15" fill="rgb(238,81,41)"/><text x="78.8306%" y="479.50"></text></g><g><title>_int_malloc (6 samples, 0.13%)</title><rect x="78.7084%" y="453" width="0.1279%" height="15" fill="rgb(210,199,37)"/><text x="78.9584%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.45%)</title><rect x="78.4101%" y="501" width="0.4476%" height="15" fill="rgb(244,192,49)"/><text x="78.6601%" y="511.50"></text></g><g><title>&lt;audio::filter::FilterModule as audio::inner::module::Module&gt;::process (34 samples, 0.72%)</title><rect x="90.0682%" y="485" width="0.7246%" height="15" fill="rgb(226,211,11)"/><text x="90.3182%" y="495.50"></text></g><g><title>bus::BusReader&lt;T&gt;::try_recv (19 samples, 0.40%)</title><rect x="90.3879%" y="469" width="0.4049%" height="15" fill="rgb(236,162,54)"/><text x="90.6379%" y="479.50"></text></g><g><title>&lt;audio::inner::metronome::Metronome as audio::inner::module::Module&gt;::process (15 samples, 0.32%)</title><rect x="90.7928%" y="485" width="0.3197%" height="15" fill="rgb(220,229,9)"/><text x="91.0428%" y="495.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (11 samples, 0.23%)</title><rect x="90.8781%" y="469" width="0.2344%" height="15" fill="rgb(250,87,22)"/><text x="91.1281%" y="479.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (9 samples, 0.19%)</title><rect x="90.9207%" y="453" width="0.1918%" height="15" fill="rgb(239,43,17)"/><text x="91.1707%" y="463.50"></text></g><g><title>&lt;audio::inner::sum_all::SumAll as audio::inner::module::Module&gt;::process (29 samples, 0.62%)</title><rect x="91.1125%" y="485" width="0.6181%" height="15" fill="rgb(231,177,25)"/><text x="91.3625%" y="495.50"></text></g><g><title>bus::BusReader&lt;T&gt;::try_recv (17 samples, 0.36%)</title><rect x="92.0929%" y="469" width="0.3623%" height="15" fill="rgb(219,179,1)"/><text x="92.3429%" y="479.50"></text></g><g><title>&lt;audio::inner::wav::Wav as audio::inner::module::Module&gt;::process (39 samples, 0.83%)</title><rect x="91.7306%" y="485" width="0.8312%" height="15" fill="rgb(238,219,53)"/><text x="91.9806%" y="495.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (5 samples, 0.11%)</title><rect x="92.4552%" y="469" width="0.1066%" height="15" fill="rgb(232,167,36)"/><text x="92.7052%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.17%)</title><rect x="92.5618%" y="485" width="0.1705%" height="15" fill="rgb(244,19,51)"/><text x="92.8118%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.17%)</title><rect x="92.5618%" y="469" width="0.1705%" height="15" fill="rgb(224,6,22)"/><text x="92.8118%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="92.5831%" y="453" width="0.1492%" height="15" fill="rgb(224,145,5)"/><text x="92.8331%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="92.5831%" y="437" width="0.1492%" height="15" fill="rgb(234,130,49)"/><text x="92.8331%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="92.5831%" y="421" width="0.1492%" height="15" fill="rgb(254,6,2)"/><text x="92.8331%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="92.5831%" y="405" width="0.1492%" height="15" fill="rgb(208,96,46)"/><text x="92.8331%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="92.6044%" y="389" width="0.1279%" height="15" fill="rgb(239,3,39)"/><text x="92.8544%" y="399.50"></text></g><g><title>std::time::SystemTime::duration_since (6 samples, 0.13%)</title><rect x="93.6061%" y="453" width="0.1279%" height="15" fill="rgb(233,210,1)"/><text x="93.8561%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (5 samples, 0.11%)</title><rect x="93.6275%" y="437" width="0.1066%" height="15" fill="rgb(244,137,37)"/><text x="93.8775%" y="447.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (5 samples, 0.11%)</title><rect x="93.6275%" y="421" width="0.1066%" height="15" fill="rgb(240,136,2)"/><text x="93.8775%" y="431.50"></text></g><g><title>&lt;audio::inner::rec::Rec as audio::inner::module::Module&gt;::process (42 samples, 0.90%)</title><rect x="93.1799%" y="469" width="0.8951%" height="15" fill="rgb(239,18,37)"/><text x="93.4299%" y="479.50"></text></g><g><title>std::time::SystemTime::now (16 samples, 0.34%)</title><rect x="93.7340%" y="453" width="0.3410%" height="15" fill="rgb(218,185,22)"/><text x="93.9840%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (16 samples, 0.34%)</title><rect x="93.7340%" y="437" width="0.3410%" height="15" fill="rgb(225,218,4)"/><text x="93.9840%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::now (16 samples, 0.34%)</title><rect x="93.7340%" y="421" width="0.3410%" height="15" fill="rgb(230,182,32)"/><text x="93.9840%" y="431.50"></text></g><g><title>__GI___clock_gettime (16 samples, 0.34%)</title><rect x="93.7340%" y="405" width="0.3410%" height="15" fill="rgb(242,56,43)"/><text x="93.9840%" y="415.50"></text></g><g><title>__vdso_clock_gettime (16 samples, 0.34%)</title><rect x="93.7340%" y="389" width="0.3410%" height="15" fill="rgb(233,99,24)"/><text x="93.9840%" y="399.50"></text></g><g><title>audio::inner::graph::Graph::run_graph (724 samples, 15.43%)</title><rect x="78.8576%" y="501" width="15.4305%" height="15" fill="rgb(234,209,42)"/><text x="79.1076%" y="511.50">audio::inner::graph::Gra..</text></g><g><title>audio::inner::module::Module::process_ts (73 samples, 1.56%)</title><rect x="92.7323%" y="485" width="1.5558%" height="15" fill="rgb(227,7,12)"/><text x="92.9823%" y="495.50"></text></g><g><title>&lt;audio::sample_player::SamplePlayerModule as audio::inner::module::Module&gt;::process (10 samples, 0.21%)</title><rect x="94.0750%" y="469" width="0.2131%" height="15" fill="rgb(245,203,43)"/><text x="94.3250%" y="479.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (9 samples, 0.19%)</title><rect x="94.3095%" y="501" width="0.1918%" height="15" fill="rgb(238,205,33)"/><text x="94.5595%" y="511.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (9 samples, 0.19%)</title><rect x="94.3095%" y="485" width="0.1918%" height="15" fill="rgb(231,56,7)"/><text x="94.5595%" y="495.50"></text></g><g><title>std::time::SystemTime::duration_since (8 samples, 0.17%)</title><rect x="94.5226%" y="501" width="0.1705%" height="15" fill="rgb(244,186,29)"/><text x="94.7726%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (7 samples, 0.15%)</title><rect x="94.5439%" y="485" width="0.1492%" height="15" fill="rgb(234,111,31)"/><text x="94.7939%" y="495.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (7 samples, 0.15%)</title><rect x="94.5439%" y="469" width="0.1492%" height="15" fill="rgb(241,149,10)"/><text x="94.7939%" y="479.50"></text></g><g><title>[libjack.so.0.1.0] (821 samples, 17.50%)</title><rect x="77.4510%" y="549" width="17.4979%" height="15" fill="rgb(249,206,44)"/><text x="77.7010%" y="559.50">[libjack.so.0.1.0]</text></g><g><title>jack::client::callbacks::process (792 samples, 16.88%)</title><rect x="78.0691%" y="533" width="16.8798%" height="15" fill="rgb(251,153,30)"/><text x="78.3191%" y="543.50">jack::client::callbacks::p..</text></g><g><title>&lt;jack::client::handler_impls::ClosureProcessHandler&lt;F&gt; as jack::client::callbacks::ProcessHandler&gt;::process (791 samples, 16.86%)</title><rect x="78.0904%" y="517" width="16.8585%" height="15" fill="rgb(239,152,38)"/><text x="78.3404%" y="527.50">&lt;jack::client::handler_imp..</text></g><g><title>std::time::SystemTime::now (12 samples, 0.26%)</title><rect x="94.6931%" y="501" width="0.2558%" height="15" fill="rgb(249,139,47)"/><text x="94.9431%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (12 samples, 0.26%)</title><rect x="94.6931%" y="485" width="0.2558%" height="15" fill="rgb(244,64,35)"/><text x="94.9431%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::now (12 samples, 0.26%)</title><rect x="94.6931%" y="469" width="0.2558%" height="15" fill="rgb(216,46,15)"/><text x="94.9431%" y="479.50"></text></g><g><title>__GI___clock_gettime (10 samples, 0.21%)</title><rect x="94.7357%" y="453" width="0.2131%" height="15" fill="rgb(250,74,19)"/><text x="94.9857%" y="463.50"></text></g><g><title>__vdso_clock_gettime (8 samples, 0.17%)</title><rect x="94.7783%" y="437" width="0.1705%" height="15" fill="rgb(249,42,33)"/><text x="95.0283%" y="447.50"></text></g><g><title>[libjack.so.0.1.0] (822 samples, 17.52%)</title><rect x="77.4510%" y="581" width="17.5192%" height="15" fill="rgb(242,149,17)"/><text x="77.7010%" y="591.50">[libjack.so.0.1.0]</text></g><g><title>[libjack.so.0.1.0] (822 samples, 17.52%)</title><rect x="77.4510%" y="565" width="17.5192%" height="15" fill="rgb(244,29,21)"/><text x="77.7010%" y="575.50">[libjack.so.0.1.0]</text></g><g><title>jack::client::async_client::AsyncClient&lt;N,P&gt;::new (6 samples, 0.13%)</title><rect x="95.0341%" y="437" width="0.1279%" height="15" fill="rgb(220,130,37)"/><text x="95.2841%" y="447.50"></text></g><g><title>[libjack.so.0.1.0] (6 samples, 0.13%)</title><rect x="95.0341%" y="421" width="0.1279%" height="15" fill="rgb(211,67,2)"/><text x="95.2841%" y="431.50"></text></g><g><title>[libjack.so.0.1.0] (6 samples, 0.13%)</title><rect x="95.0341%" y="405" width="0.1279%" height="15" fill="rgb(235,68,52)"/><text x="95.2841%" y="415.50"></text></g><g><title>usleep (5 samples, 0.11%)</title><rect x="95.0554%" y="389" width="0.1066%" height="15" fill="rgb(246,142,3)"/><text x="95.3054%" y="399.50"></text></g><g><title>__GI___nanosleep (5 samples, 0.11%)</title><rect x="95.0554%" y="373" width="0.1066%" height="15" fill="rgb(241,25,7)"/><text x="95.3054%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.0554%" y="357" width="0.1066%" height="15" fill="rgb(242,119,39)"/><text x="95.3054%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.0554%" y="341" width="0.1066%" height="15" fill="rgb(241,98,45)"/><text x="95.3054%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.0554%" y="325" width="0.1066%" height="15" fill="rgb(254,28,30)"/><text x="95.3054%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.0554%" y="309" width="0.1066%" height="15" fill="rgb(241,142,54)"/><text x="95.3054%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.0554%" y="293" width="0.1066%" height="15" fill="rgb(222,85,15)"/><text x="95.3054%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.0554%" y="277" width="0.1066%" height="15" fill="rgb(210,85,47)"/><text x="95.3054%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.0554%" y="261" width="0.1066%" height="15" fill="rgb(224,206,25)"/><text x="95.3054%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.0554%" y="245" width="0.1066%" height="15" fill="rgb(243,201,19)"/><text x="95.3054%" y="255.50"></text></g><g><title>[libjack.so.0.1.0] (5 samples, 0.11%)</title><rect x="95.1620%" y="373" width="0.1066%" height="15" fill="rgb(236,59,4)"/><text x="95.4120%" y="383.50"></text></g><g><title>usleep (5 samples, 0.11%)</title><rect x="95.1620%" y="357" width="0.1066%" height="15" fill="rgb(254,179,45)"/><text x="95.4120%" y="367.50"></text></g><g><title>__GI___nanosleep (5 samples, 0.11%)</title><rect x="95.1620%" y="341" width="0.1066%" height="15" fill="rgb(226,14,10)"/><text x="95.4120%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.1620%" y="325" width="0.1066%" height="15" fill="rgb(244,27,41)"/><text x="95.4120%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.1620%" y="309" width="0.1066%" height="15" fill="rgb(235,35,32)"/><text x="95.4120%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.1620%" y="293" width="0.1066%" height="15" fill="rgb(218,68,31)"/><text x="95.4120%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.1620%" y="277" width="0.1066%" height="15" fill="rgb(207,120,37)"/><text x="95.4120%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.1620%" y="261" width="0.1066%" height="15" fill="rgb(227,98,0)"/><text x="95.4120%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.1620%" y="245" width="0.1066%" height="15" fill="rgb(207,7,3)"/><text x="95.4120%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.1620%" y="229" width="0.1066%" height="15" fill="rgb(206,98,19)"/><text x="95.4120%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.1620%" y="213" width="0.1066%" height="15" fill="rgb(217,5,26)"/><text x="95.4120%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.1620%" y="197" width="0.1066%" height="15" fill="rgb(235,190,38)"/><text x="95.4120%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.1620%" y="181" width="0.1066%" height="15" fill="rgb(247,86,24)"/><text x="95.4120%" y="191.50"></text></g><g><title>[libjack.so.0.1.0] (10 samples, 0.21%)</title><rect x="95.1620%" y="389" width="0.2131%" height="15" fill="rgb(205,101,16)"/><text x="95.4120%" y="399.50"></text></g><g><title>usleep (5 samples, 0.11%)</title><rect x="95.2685%" y="373" width="0.1066%" height="15" fill="rgb(246,168,33)"/><text x="95.5185%" y="383.50"></text></g><g><title>__GI___nanosleep (5 samples, 0.11%)</title><rect x="95.2685%" y="357" width="0.1066%" height="15" fill="rgb(231,114,1)"/><text x="95.5185%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.2685%" y="341" width="0.1066%" height="15" fill="rgb(207,184,53)"/><text x="95.5185%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.2685%" y="325" width="0.1066%" height="15" fill="rgb(224,95,51)"/><text x="95.5185%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.2685%" y="309" width="0.1066%" height="15" fill="rgb(212,188,45)"/><text x="95.5185%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.2685%" y="293" width="0.1066%" height="15" fill="rgb(223,154,38)"/><text x="95.5185%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.2685%" y="277" width="0.1066%" height="15" fill="rgb(251,22,52)"/><text x="95.5185%" y="287.50"></text></g><g><title>audio::inner::audio::init (17 samples, 0.36%)</title><rect x="95.0341%" y="453" width="0.3623%" height="15" fill="rgb(229,209,22)"/><text x="95.2841%" y="463.50"></text></g><g><title>jack::client::client::Client::new (11 samples, 0.23%)</title><rect x="95.1620%" y="437" width="0.2344%" height="15" fill="rgb(234,138,34)"/><text x="95.4120%" y="447.50"></text></g><g><title>jack_client_open (11 samples, 0.23%)</title><rect x="95.1620%" y="421" width="0.2344%" height="15" fill="rgb(212,95,11)"/><text x="95.4120%" y="431.50"></text></g><g><title>[libjack.so.0.1.0] (11 samples, 0.23%)</title><rect x="95.1620%" y="405" width="0.2344%" height="15" fill="rgb(240,179,47)"/><text x="95.4120%" y="415.50"></text></g><g><title>audio::state_writer_reader::save_settings::_{{closure}} (11 samples, 0.23%)</title><rect x="95.4817%" y="453" width="0.2344%" height="15" fill="rgb(240,163,11)"/><text x="95.7317%" y="463.50"></text></g><g><title>std::thread::sleep (10 samples, 0.21%)</title><rect x="95.5030%" y="437" width="0.2131%" height="15" fill="rgb(236,37,12)"/><text x="95.7530%" y="447.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (10 samples, 0.21%)</title><rect x="95.5030%" y="421" width="0.2131%" height="15" fill="rgb(232,164,16)"/><text x="95.7530%" y="431.50"></text></g><g><title>__GI___nanosleep (10 samples, 0.21%)</title><rect x="95.5030%" y="405" width="0.2131%" height="15" fill="rgb(244,205,15)"/><text x="95.7530%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.21%)</title><rect x="95.5030%" y="389" width="0.2131%" height="15" fill="rgb(223,117,47)"/><text x="95.7530%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.21%)</title><rect x="95.5030%" y="373" width="0.2131%" height="15" fill="rgb(244,107,35)"/><text x="95.7530%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.21%)</title><rect x="95.5030%" y="357" width="0.2131%" height="15" fill="rgb(205,140,8)"/><text x="95.7530%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.21%)</title><rect x="95.5030%" y="341" width="0.2131%" height="15" fill="rgb(228,84,46)"/><text x="95.7530%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.21%)</title><rect x="95.5030%" y="325" width="0.2131%" height="15" fill="rgb(254,188,9)"/><text x="95.7530%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.21%)</title><rect x="95.5030%" y="309" width="0.2131%" height="15" fill="rgb(206,112,54)"/><text x="95.7530%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.19%)</title><rect x="95.5243%" y="293" width="0.1918%" height="15" fill="rgb(216,84,49)"/><text x="95.7743%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.19%)</title><rect x="95.5243%" y="277" width="0.1918%" height="15" fill="rgb(214,194,35)"/><text x="95.7743%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.17%)</title><rect x="95.5456%" y="261" width="0.1705%" height="15" fill="rgb(249,28,3)"/><text x="95.7956%" y="271.50"></text></g><g><title>std::fs::write (6 samples, 0.13%)</title><rect x="95.7161%" y="437" width="0.1279%" height="15" fill="rgb(222,56,52)"/><text x="95.9661%" y="447.50"></text></g><g><title>std::fs::write::inner (6 samples, 0.13%)</title><rect x="95.7161%" y="421" width="0.1279%" height="15" fill="rgb(245,217,50)"/><text x="95.9661%" y="431.50"></text></g><g><title>std::fs::File::create (6 samples, 0.13%)</title><rect x="95.7161%" y="405" width="0.1279%" height="15" fill="rgb(213,201,24)"/><text x="95.9661%" y="415.50"></text></g><g><title>std::fs::OpenOptions::open (6 samples, 0.13%)</title><rect x="95.7161%" y="389" width="0.1279%" height="15" fill="rgb(248,116,28)"/><text x="95.9661%" y="399.50"></text></g><g><title>std::fs::OpenOptions::_open (6 samples, 0.13%)</title><rect x="95.7161%" y="373" width="0.1279%" height="15" fill="rgb(219,72,43)"/><text x="95.9661%" y="383.50"></text></g><g><title>std::sys::unix::fs::File::open (6 samples, 0.13%)</title><rect x="95.7161%" y="357" width="0.1279%" height="15" fill="rgb(209,138,14)"/><text x="95.9661%" y="367.50"></text></g><g><title>std::sys::unix::fs::File::open_c (6 samples, 0.13%)</title><rect x="95.7161%" y="341" width="0.1279%" height="15" fill="rgb(222,18,33)"/><text x="95.9661%" y="351.50"></text></g><g><title>std::sys::unix::cvt_r (6 samples, 0.13%)</title><rect x="95.7161%" y="325" width="0.1279%" height="15" fill="rgb(213,199,7)"/><text x="95.9661%" y="335.50"></text></g><g><title>std::sys::unix::fs::File::open_c::_{{closure}} (6 samples, 0.13%)</title><rect x="95.7161%" y="309" width="0.1279%" height="15" fill="rgb(250,110,10)"/><text x="95.9661%" y="319.50"></text></g><g><title>__libc_open64 (6 samples, 0.13%)</title><rect x="95.7161%" y="293" width="0.1279%" height="15" fill="rgb(248,123,6)"/><text x="95.9661%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="95.7161%" y="277" width="0.1279%" height="15" fill="rgb(206,91,31)"/><text x="95.9661%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="95.7161%" y="261" width="0.1279%" height="15" fill="rgb(211,154,13)"/><text x="95.9661%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="95.7161%" y="245" width="0.1279%" height="15" fill="rgb(225,148,7)"/><text x="95.9661%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="95.7161%" y="229" width="0.1279%" height="15" fill="rgb(220,160,43)"/><text x="95.9661%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="95.7161%" y="213" width="0.1279%" height="15" fill="rgb(213,52,39)"/><text x="95.9661%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="95.7161%" y="197" width="0.1279%" height="15" fill="rgb(243,137,7)"/><text x="95.9661%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="95.7161%" y="181" width="0.1279%" height="15" fill="rgb(230,79,13)"/><text x="95.9661%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="95.7161%" y="165" width="0.1279%" height="15" fill="rgb(247,105,23)"/><text x="95.9661%" y="175.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="95.7161%" y="149" width="0.1279%" height="15" fill="rgb(223,179,41)"/><text x="95.9661%" y="159.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="95.7161%" y="133" width="0.1279%" height="15" fill="rgb(218,9,34)"/><text x="95.9661%" y="143.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.7374%" y="117" width="0.1066%" height="15" fill="rgb(222,106,8)"/><text x="95.9874%" y="127.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.7374%" y="101" width="0.1066%" height="15" fill="rgb(211,220,0)"/><text x="95.9874%" y="111.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.7374%" y="85" width="0.1066%" height="15" fill="rgb(229,52,16)"/><text x="95.9874%" y="95.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.7374%" y="69" width="0.1066%" height="15" fill="rgb(212,155,18)"/><text x="95.9874%" y="79.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.7374%" y="53" width="0.1066%" height="15" fill="rgb(242,21,14)"/><text x="95.9874%" y="63.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.7374%" y="37" width="0.1066%" height="15" fill="rgb(222,19,48)"/><text x="95.9874%" y="47.50"></text></g><g><title>std::panicking::try::do_call (43 samples, 0.92%)</title><rect x="95.0341%" y="485" width="0.9165%" height="15" fill="rgb(232,45,27)"/><text x="95.2841%" y="495.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (43 samples, 0.92%)</title><rect x="95.0341%" y="469" width="0.9165%" height="15" fill="rgb(249,103,42)"/><text x="95.2841%" y="479.50"></text></g><g><title>audio::state_writer_reader::save_status::_{{closure}} (11 samples, 0.23%)</title><rect x="95.7161%" y="453" width="0.2344%" height="15" fill="rgb(246,81,33)"/><text x="95.9661%" y="463.50"></text></g><g><title>std::thread::sleep (5 samples, 0.11%)</title><rect x="95.8440%" y="437" width="0.1066%" height="15" fill="rgb(252,33,42)"/><text x="96.0940%" y="447.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (5 samples, 0.11%)</title><rect x="95.8440%" y="421" width="0.1066%" height="15" fill="rgb(209,212,41)"/><text x="96.0940%" y="431.50"></text></g><g><title>__GI___nanosleep (5 samples, 0.11%)</title><rect x="95.8440%" y="405" width="0.1066%" height="15" fill="rgb(207,154,6)"/><text x="96.0940%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.8440%" y="389" width="0.1066%" height="15" fill="rgb(223,64,47)"/><text x="96.0940%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.8440%" y="373" width="0.1066%" height="15" fill="rgb(211,161,38)"/><text x="96.0940%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.8440%" y="357" width="0.1066%" height="15" fill="rgb(219,138,40)"/><text x="96.0940%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="95.8440%" y="341" width="0.1066%" height="15" fill="rgb(241,228,46)"/><text x="96.0940%" y="351.50"></text></g><g><title>__rust_maybe_catch_panic (47 samples, 1.00%)</title><rect x="95.0341%" y="501" width="1.0017%" height="15" fill="rgb(223,209,38)"/><text x="95.2841%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (54 samples, 1.15%)</title><rect x="95.0128%" y="549" width="1.1509%" height="15" fill="rgb(236,164,45)"/><text x="95.2628%" y="559.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (54 samples, 1.15%)</title><rect x="95.0128%" y="533" width="1.1509%" height="15" fill="rgb(231,15,5)"/><text x="95.2628%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (53 samples, 1.13%)</title><rect x="95.0341%" y="517" width="1.1296%" height="15" fill="rgb(252,35,15)"/><text x="95.2841%" y="527.50"></text></g><g><title>std::sys::unix::thread::guard::current (6 samples, 0.13%)</title><rect x="96.0358%" y="501" width="0.1279%" height="15" fill="rgb(248,181,18)"/><text x="96.2858%" y="511.50"></text></g><g><title>pthread_getattr_np (6 samples, 0.13%)</title><rect x="96.0358%" y="485" width="0.1279%" height="15" fill="rgb(233,39,42)"/><text x="96.2858%" y="495.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.13%)</title><rect x="96.0358%" y="469" width="0.1279%" height="15" fill="rgb(238,110,33)"/><text x="96.2858%" y="479.50"></text></g><g><title>tcache_init (6 samples, 0.13%)</title><rect x="96.0358%" y="453" width="0.1279%" height="15" fill="rgb(233,195,10)"/><text x="96.2858%" y="463.50"></text></g><g><title>tcache_init (6 samples, 0.13%)</title><rect x="96.0358%" y="437" width="0.1279%" height="15" fill="rgb(254,105,3)"/><text x="96.2858%" y="447.50"></text></g><g><title>arena_get2 (6 samples, 0.13%)</title><rect x="96.0358%" y="421" width="0.1279%" height="15" fill="rgb(221,225,9)"/><text x="96.2858%" y="431.50"></text></g><g><title>arena_get2 (6 samples, 0.13%)</title><rect x="96.0358%" y="405" width="0.1279%" height="15" fill="rgb(224,227,45)"/><text x="96.2858%" y="415.50"></text></g><g><title>_int_new_arena (6 samples, 0.13%)</title><rect x="96.0358%" y="389" width="0.1279%" height="15" fill="rgb(229,198,43)"/><text x="96.2858%" y="399.50"></text></g><g><title>new_heap (6 samples, 0.13%)</title><rect x="96.0358%" y="373" width="0.1279%" height="15" fill="rgb(206,209,35)"/><text x="96.2858%" y="383.50"></text></g><g><title>__GI___clone (938 samples, 19.99%)</title><rect x="76.2788%" y="613" width="19.9915%" height="15" fill="rgb(245,195,53)"/><text x="76.5288%" y="623.50">__GI___clone</text></g><g><title>start_thread (884 samples, 18.84%)</title><rect x="77.4297%" y="597" width="18.8406%" height="15" fill="rgb(240,92,26)"/><text x="77.6797%" y="607.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (60 samples, 1.28%)</title><rect x="94.9915%" y="581" width="1.2788%" height="15" fill="rgb(207,40,23)"/><text x="95.2415%" y="591.50"></text></g><g><title>std::sys_common::thread::start_thread (59 samples, 1.26%)</title><rect x="95.0128%" y="565" width="1.2575%" height="15" fill="rgb(223,111,35)"/><text x="95.2628%" y="575.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (5 samples, 0.11%)</title><rect x="96.1637%" y="549" width="0.1066%" height="15" fill="rgb(229,147,28)"/><text x="96.4137%" y="559.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (5 samples, 0.11%)</title><rect x="96.1637%" y="533" width="0.1066%" height="15" fill="rgb(211,29,28)"/><text x="96.4137%" y="543.50"></text></g><g><title>__vdso_clock_gettime (5 samples, 0.11%)</title><rect x="96.2916%" y="613" width="0.1066%" height="15" fill="rgb(228,72,33)"/><text x="96.5416%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="96.2916%" y="597" width="0.1066%" height="15" fill="rgb(205,214,31)"/><text x="96.5416%" y="607.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (5 samples, 0.11%)</title><rect x="98.5720%" y="373" width="0.1066%" height="15" fill="rgb(224,111,15)"/><text x="98.8220%" y="383.50"></text></g><g><title>std::sys::unix::fs::File::read (5 samples, 0.11%)</title><rect x="98.5720%" y="357" width="0.1066%" height="15" fill="rgb(253,21,26)"/><text x="98.8220%" y="367.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (5 samples, 0.11%)</title><rect x="98.5720%" y="341" width="0.1066%" height="15" fill="rgb(245,139,43)"/><text x="98.8220%" y="351.50"></text></g><g><title>__libc_read (5 samples, 0.11%)</title><rect x="98.5720%" y="325" width="0.1066%" height="15" fill="rgb(252,170,7)"/><text x="98.8220%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="98.5720%" y="309" width="0.1066%" height="15" fill="rgb(231,118,14)"/><text x="98.8220%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="98.5720%" y="293" width="0.1066%" height="15" fill="rgb(238,83,0)"/><text x="98.8220%" y="303.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (33 samples, 0.70%)</title><rect x="98.1884%" y="389" width="0.7033%" height="15" fill="rgb(221,39,39)"/><text x="98.4384%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.21%)</title><rect x="98.6786%" y="373" width="0.2131%" height="15" fill="rgb(222,119,46)"/><text x="98.9286%" y="383.50"></text></g><g><title>&lt;i16 as hound::Sample&gt;::read (68 samples, 1.45%)</title><rect x="97.4638%" y="405" width="1.4493%" height="15" fill="rgb(222,165,49)"/><text x="97.7138%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (112 samples, 2.39%)</title><rect x="96.7818%" y="421" width="2.3870%" height="15" fill="rgb(219,113,52)"/><text x="97.0318%" y="431.50">&lt;a..</text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.26%)</title><rect x="98.9130%" y="405" width="0.2558%" height="15" fill="rgb(214,7,15)"/><text x="99.1630%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.21%)</title><rect x="98.9557%" y="389" width="0.2131%" height="15" fill="rgb(235,32,4)"/><text x="99.2057%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.19%)</title><rect x="98.9770%" y="373" width="0.1918%" height="15" fill="rgb(238,90,54)"/><text x="99.2270%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.17%)</title><rect x="98.9983%" y="357" width="0.1705%" height="15" fill="rgb(213,208,19)"/><text x="99.2483%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.17%)</title><rect x="98.9983%" y="341" width="0.1705%" height="15" fill="rgb(233,156,4)"/><text x="99.2483%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.17%)</title><rect x="98.9983%" y="325" width="0.1705%" height="15" fill="rgb(207,194,5)"/><text x="99.2483%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="99.0409%" y="309" width="0.1279%" height="15" fill="rgb(206,111,30)"/><text x="99.2909%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.11%)</title><rect x="99.0622%" y="293" width="0.1066%" height="15" fill="rgb(243,70,54)"/><text x="99.3122%" y="303.50"></text></g><g><title>__libc_start_main (138 samples, 2.94%)</title><rect x="96.3981%" y="597" width="2.9412%" height="15" fill="rgb(242,28,8)"/><text x="96.6481%" y="607.50">__..</text></g><g><title>main (138 samples, 2.94%)</title><rect x="96.3981%" y="581" width="2.9412%" height="15" fill="rgb(219,106,18)"/><text x="96.6481%" y="591.50">ma..</text></g><g><title>std::rt::lang_start_internal (138 samples, 2.94%)</title><rect x="96.3981%" y="565" width="2.9412%" height="15" fill="rgb(244,222,10)"/><text x="96.6481%" y="575.50">st..</text></g><g><title>std::panic::catch_unwind (138 samples, 2.94%)</title><rect x="96.3981%" y="549" width="2.9412%" height="15" fill="rgb(236,179,52)"/><text x="96.6481%" y="559.50">st..</text></g><g><title>std::panicking::try (138 samples, 2.94%)</title><rect x="96.3981%" y="533" width="2.9412%" height="15" fill="rgb(213,23,39)"/><text x="96.6481%" y="543.50">st..</text></g><g><title>__rust_maybe_catch_panic (138 samples, 2.94%)</title><rect x="96.3981%" y="517" width="2.9412%" height="15" fill="rgb(238,48,10)"/><text x="96.6481%" y="527.50">__..</text></g><g><title>std::panicking::try::do_call (138 samples, 2.94%)</title><rect x="96.3981%" y="501" width="2.9412%" height="15" fill="rgb(251,196,23)"/><text x="96.6481%" y="511.50">st..</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (138 samples, 2.94%)</title><rect x="96.3981%" y="485" width="2.9412%" height="15" fill="rgb(250,152,24)"/><text x="96.6481%" y="495.50">st..</text></g><g><title>std::rt::lang_start::_{{closure}} (138 samples, 2.94%)</title><rect x="96.3981%" y="469" width="2.9412%" height="15" fill="rgb(209,150,17)"/><text x="96.6481%" y="479.50">st..</text></g><g><title>audio::main (138 samples, 2.94%)</title><rect x="96.3981%" y="453" width="2.9412%" height="15" fill="rgb(234,202,34)"/><text x="96.6481%" y="463.50">au..</text></g><g><title>audio::inner::wav::Wav::new (135 samples, 2.88%)</title><rect x="96.4621%" y="437" width="2.8772%" height="15" fill="rgb(253,148,53)"/><text x="96.7121%" y="447.50">au..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.13%)</title><rect x="99.2114%" y="421" width="0.1279%" height="15" fill="rgb(218,129,16)"/><text x="99.4614%" y="431.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.13%)</title><rect x="99.2114%" y="405" width="0.1279%" height="15" fill="rgb(216,85,19)"/><text x="99.4614%" y="415.50"></text></g><g><title>_int_realloc (6 samples, 0.13%)</title><rect x="99.2114%" y="389" width="0.1279%" height="15" fill="rgb(235,228,7)"/><text x="99.4614%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.13%)</title><rect x="99.2114%" y="373" width="0.1279%" height="15" fill="rgb(245,175,0)"/><text x="99.4614%" y="383.50"></text></g><g><title>_start (139 samples, 2.96%)</title><rect x="96.3981%" y="613" width="2.9625%" height="15" fill="rgb(208,168,36)"/><text x="96.6481%" y="623.50">_st..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.21%)</title><rect x="99.3606%" y="613" width="0.2131%" height="15" fill="rgb(246,171,24)"/><text x="99.6106%" y="623.50"></text></g><g><title>audio::inner::wav::Wav::new (7 samples, 0.15%)</title><rect x="99.6590%" y="613" width="0.1492%" height="15" fill="rgb(215,142,24)"/><text x="99.9090%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.13%)</title><rect x="99.6803%" y="597" width="0.1279%" height="15" fill="rgb(250,187,7)"/><text x="99.9303%" y="607.50"></text></g><g><title>audio (4,688 samples, 99.91%)</title><rect x="0.0000%" y="629" width="99.9147%" height="15" fill="rgb(228,66,33)"/><text x="0.2500%" y="639.50">audio</text></g><g><title>all (4,692 samples, 100%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(234,215,21)"/><text x="0.2500%" y="655.50"></text></g></svg></svg>